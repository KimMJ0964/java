package p.network;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

public class ServerTest {
	public static void main(String[] args) {
		int port = 3000;
		ServerSocket server;
		
		try {
			server = new ServerSocket(port);
			
			while(true) {
				
				
				Socket client = server.accept();
				System.out.println(socket.getInetAddress().getHostAddress() + "가 연결을 요청함...");
				
				// 4) 클라이언트와 입출력 기반 스트림 생성(바이트스트림밖에 안됨)
				// 5) 보조스트림을 활용해서 성능개선
				
				// 입력용 스트림
				br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
				// BufferedReader : 데이터 입력시 nextLine 메소드 이용가능
				
				// 출력용 스트림
				pw = new PrintWriter(socket.getOutputStream());
				// PrintWriter : 데이터 출력시 print(), println() 메소드를 가지고 있는 보조 스트림
				
				while(true) {
					String message = br.readLine();
					System.out.println("클라이언트로부터 전달받은 메세지 : " + message);
					
					System.out.print("클라이언트에게 보낼 내용 : ");
					String sendMessage = sc.nextLine();
					
					pw.println(sendMessage);	// 클라이언트에게 출력
					pw.flush();		// 현재 스트림에 있는 데이터를 강제로 내보내기
					}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}
